<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:config/db.properties"/>
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.userName}"/>
        <property name="password" value="${db.passWord}"/>
        <property name="driverClassName" value="${db.driverClass}"/>

    </bean>
    <!--
    <bean id="dataSource"
          class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <property name="driverClassName" value="${hikaricp.jdbc.driverClassName}"/>
                <property name="jdbcUrl" value="${hikaricp.url}"/>
                <property name="username" value="${hikaricp.username}"/>
                <property name="password" value="${hikaricp.password}"/>
                <property name="connectionTestQuery" value="${hikaricp.connectionTestQuery}"/>
                <property name="connectionTimeout" value="${hikaricp.connectionTimeout}"/>
                <property name="idleTimeout" value="${hikaricp.idleTimeout}"/>
                <property name="maxLifetime" value="${hikaricp.maxLifetime}"/>
                <property name="maximumPoolSize" value="${hikaricp.maximumPoolSize}"/>
                <property name="minimumIdle" value="${hikaricp.minimumIdle}"/>
            </bean>
        </constructor-arg>
    </bean>
    -->
    <!--
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
         基本属性 url、user、password
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.userName}" />
        <property name="password" value="${db.passWord}" />
        <property name="driverClassName" value="${db.driverClass}" />

        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <property name="maxWait" value="60000" />

        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <property name="filters" value="stat" />
    </bean>
-->
    <bean id="hibernateInterceptor" class="com.auth.interceptor.HibernateInterceptor"/>
    <!--hiberate配置-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="entityInterceptor" ref="hibernateInterceptor"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>-->
            </props>
        </property>

        <!-- 需要加载的Hibernate实体类（使用注解方式） -->
        <property name="packagesToScan" value="com.auth.pojo"/>


    </bean>

    <bean id="hibernateTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--
    <bean id="jdbcTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    -->


</beans>